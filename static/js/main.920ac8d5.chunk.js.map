{"version":3,"sources":["components/Button.jsx","components/Display.jsx","components/Calculator.jsx","index.js"],"names":["props","classes","operation","double","triple","onClick","e","click","label","className","value","initialState","displayValue","clearDisplay","values","current","Calculator","state","clearMemory","bind","setOperation","addDigit","this","setState","equals","currentOperation","n","includes","i","newValue","parseFloat","console","log","Component","ReactDOM","render","document","getElementById"],"mappings":"oUAGe,G,WAAA,SAAAA,GACX,IAAIC,EAAU,UAId,OAHAA,GAAWD,EAAME,UAAY,YAAc,GAC3CD,GAAWD,EAAMG,OAAS,SAAW,GACrCF,GAAWD,EAAMI,OAAS,SAAW,GAEjC,4BACIC,QAAS,SAAAC,GAAC,OAAEN,EAAMO,OAASP,EAAMO,MAAMP,EAAMQ,QAC7CC,UAAWR,GACVD,EAAMQ,SCTJ,G,MAAA,SAAAR,GAAK,OAChB,yBAAKS,UAAU,WAAWT,EAAMU,SCE9BC,EAAe,CACjBC,aAAc,IACdC,cAAc,EACdX,UAAW,KACXY,OAAQ,CAAC,EAAG,GACZC,QAAS,GAGQC,E,kDAEjB,WAAYhB,GAAQ,IAAD,8BACf,cAAMA,IAFViB,MACmB,eADPN,GAIR,EAAKO,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,SAAW,EAAKA,SAASF,KAAd,gBALD,E,0DAQfG,KAAKC,SAAL,eAAkBZ,M,mCAETT,GACT,GAA2B,IAAvBoB,KAAKL,MAAMF,QACXO,KAAKC,SAAS,CAACrB,YAAWa,QAAQ,EAAEF,cAAc,QACjD,CAED,IAAMW,EAAuB,MAAdtB,EACTuB,EAAmBH,KAAKL,MAAMf,UAC9BY,EAAM,YAAOQ,KAAKL,MAAMH,QAEL,MAArBW,IACAX,EAAO,GAAKA,EAAO,GAAKA,EAAO,IAEV,MAArBW,IACAX,EAAO,GAAKA,EAAO,GAAKA,EAAO,IAEV,MAArBW,IACAX,EAAO,GAAKA,EAAO,GAAKA,EAAO,IAEV,MAArBW,IACAX,EAAO,GAAKA,EAAO,GAAKA,EAAO,IAEnCA,EAAO,GAAK,EAEZQ,KAAKC,SAAS,CACVX,aAAcE,EAAO,GACrBZ,UAAWsB,EAAS,KAAOtB,EAC3Ba,QAASS,EAAS,EAAI,EACtBX,cAAeW,EACfV,c,+BAKHY,GAEL,GAAU,MAANA,IAAaJ,KAAKL,MAAML,aAAae,SAAS,KAAlD,CAIA,IAKMf,GAL2C,MAA5BU,KAAKL,MAAML,cAC7BU,KAAKL,MAAMJ,aAEsB,GAAKS,KAAKL,MAAML,cAEhBc,EAIpC,GAFAJ,KAAKC,SAAS,CAACX,eAAcC,cAAa,IAEhC,MAANa,EAAU,CACV,IAAME,EAAIN,KAAKL,MAAMF,QACfc,EAAWC,WAAWlB,GACtBE,EAAM,YAAOQ,KAAKL,MAAMH,QAC9BA,EAAOc,GAAKC,EACZP,KAAKC,SAAS,CAACT,WACfiB,QAAQC,IAAIlB,O,+BAIhB,OACI,yBAAKL,UAAU,cACX,kBAAC,EAAD,CAASC,MAAOY,KAAKL,MAAML,eAC3B,kBAAC,EAAD,CAAQJ,MAAO,KAAKD,MAAOe,KAAKJ,YAAad,QAAM,IACnD,kBAAC,EAAD,CAAQI,MAAO,IAAID,MAAOe,KAAKF,aAAclB,WAAS,IACtD,kBAAC,EAAD,CAAQM,MAAO,IAAID,MAAOe,KAAKD,WAC/B,kBAAC,EAAD,CAAQb,MAAO,IAAID,MAAOe,KAAKD,WAC/B,kBAAC,EAAD,CAAQb,MAAO,IAAID,MAAOe,KAAKD,WAC/B,kBAAC,EAAD,CAAQb,MAAO,IAAID,MAAOe,KAAKF,aAAclB,WAAS,IACtD,kBAAC,EAAD,CAAQM,MAAO,IAAID,MAAOe,KAAKD,WAC/B,kBAAC,EAAD,CAAQb,MAAO,IAAID,MAAOe,KAAKD,WAC/B,kBAAC,EAAD,CAAQb,MAAO,IAAID,MAAOe,KAAKD,WAC/B,kBAAC,EAAD,CAAQb,MAAO,IAAID,MAAOe,KAAKF,aAAclB,WAAS,IACtD,kBAAC,EAAD,CAAQM,MAAO,IAAID,MAAOe,KAAKD,WAC/B,kBAAC,EAAD,CAAQb,MAAO,IAAID,MAAOe,KAAKD,WAC/B,kBAAC,EAAD,CAAQb,MAAO,IAAID,MAAOe,KAAKD,WAC/B,kBAAC,EAAD,CAAQb,MAAO,IAAID,MAAOe,KAAKF,aAAclB,WAAS,IACtD,kBAAC,EAAD,CAAQM,MAAO,IAAID,MAAOe,KAAKD,SAAUlB,QAAM,IAC/C,kBAAC,EAAD,CAAQK,MAAO,IAAID,MAAOe,KAAKD,WAC/B,kBAAC,EAAD,CAAQb,MAAO,IAAID,MAAOe,KAAKF,aAAclB,WAAS,S,GAzF9B+B,aCTxCC,IAASC,OACP,6BACI,0CACE,kBAAC,EAAD,OAENC,SAASC,eAAe,W","file":"static/js/main.920ac8d5.chunk.js","sourcesContent":["import React from \"react\";\nimport './Button.css'\n\nexport default props => {\n    let classes = 'button '\n    classes += props.operation ? 'operation' : ''\n    classes += props.double ? 'double' : ''\n    classes += props.triple ? 'triple' : ''\n    return (\n        <button\n            onClick={e=>props.click && props.click(props.label)}\n            className={classes}>\n            {props.label}\n        </button>\n\n    )\n}\n","import React from \"react\";\nimport './Display.css'\n\nexport default props =>\n    <div className=\"display\">{props.value}</div>","import React, {Component} from \"react\";\nimport './Calculator.css'\nimport Button from './Button.jsx'\nimport './Button.css'\nimport Display from './Display.jsx'\n\nconst initialState = {\n    displayValue: '0',\n    clearDisplay: false,\n    operation: null,\n    values: [0, 0],\n    current: 0\n}\n\nexport default class Calculator extends Component{\n    state = {...initialState}\n    constructor(props) {\n        super(props);\n\n        this.clearMemory = this.clearMemory.bind(this)\n        this.setOperation = this.setOperation.bind(this)\n        this.addDigit = this.addDigit.bind(this)\n    }\n    clearMemory(){\n        this.setState({...initialState})\n    }\n    setOperation(operation){\n        if (this.state.current === 0 ){\n            this.setState({operation, current:1,clearDisplay: true})\n        }else{\n\n            const equals = operation === '='\n            const currentOperation = this.state.operation\n            const values = [...this.state.values]\n\n            if (currentOperation === '/'){\n                values[0] = values[0] / values[1]\n            }\n            if (currentOperation === '*'){\n                values[0] = values[0] * values[1]\n            }\n            if (currentOperation === '+'){\n                values[0] = values[0] + values[1]\n            }\n            if (currentOperation === '-'){\n                values[0] = values[0] - values[1]\n            }\n            values[1] = 0\n\n            this.setState({\n                displayValue: values[0],\n                operation: equals ? null : operation,\n                current: equals ? 0 : 1,\n                clearDisplay: !equals,\n                values\n            })\n\n        }\n    }\n    addDigit(n) {\n        //regra para nao colocar mais de um ponto\n        if (n === '.' && this.state.displayValue.includes('.')) {\n            return\n        }\n        //regra pra nao colocar zeros a esquerda\n        const clearDisplay = this.state.displayValue === '0'\n        || this.state.clearDisplay\n\n        const currentValue = clearDisplay ? '' : this.state.displayValue\n\n        const displayValue = currentValue + n\n\n        this.setState({displayValue, clearDisplay:false})\n\n        if (n !== '.'){\n            const i = this.state.current\n            const newValue = parseFloat(displayValue)\n            const values = [...this.state.values]\n            values[i] = newValue\n            this.setState({values})\n            console.log(values)\n        }\n    }\n    render() {\n        return (\n            <div className=\"calculator\">\n                <Display value={this.state.displayValue}/>\n                <Button label =\"AC\" click={this.clearMemory} triple/>\n                <Button label =\"/\" click={this.setOperation} operation/>\n                <Button label =\"7\" click={this.addDigit} />\n                <Button label =\"8\" click={this.addDigit}/>\n                <Button label =\"9\" click={this.addDigit}/>\n                <Button label =\"*\" click={this.setOperation} operation/>\n                <Button label =\"4\" click={this.addDigit}/>\n                <Button label =\"5\" click={this.addDigit}/>\n                <Button label =\"6\" click={this.addDigit}/>\n                <Button label =\"-\" click={this.setOperation} operation/>\n                <Button label =\"1\" click={this.addDigit}/>\n                <Button label =\"2\" click={this.addDigit}/>\n                <Button label =\"3\" click={this.addDigit}/>\n                <Button label =\"+\" click={this.setOperation} operation/>\n                <Button label =\"0\" click={this.addDigit} double/>\n                <Button label =\".\" click={this.addDigit}/>\n                <Button label =\"=\" click={this.setOperation} operation/>\n\n\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from \"./components/Calculator\";\n\nReactDOM.render(\n  <div>\n      <h1>Calculator</h1>\n        <Calculator />\n  </div>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}